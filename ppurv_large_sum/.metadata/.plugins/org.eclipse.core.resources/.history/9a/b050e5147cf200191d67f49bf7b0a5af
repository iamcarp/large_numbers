/*
 * sum.c
 *
 *  Created on: Oct 18, 2019
 *      Author: rtrk
 */
#include "sum.h"
int arr[1000];
int_least8_t size=0;
void pushback(int data){
	arr[size]=data;
	size++;
}

char* SUM(const char num1[], const char num2[]){
	//find lenght of numbers
	const int_least8_t num1_len = sizeof(num1) / sizeof (int_least8_t);
	const int_least8_t num2_len = sizeof(num2) / sizeof (int_least8_t);

	int_least8_t len_diferene=0;
	int_least8_t carry=0;
	int_least8_t i;
	int_least8_t num1_sum=0;
	int_least8_t num2_sum=0;

	char sum="";

	//num2 must be longer
	if(num2_len<num1_len){
		//swap num1 and num2
		char temp=num1;
		num1=num2;
		num2=temp;
	}

	len_diferene=num2_len-num1_len;


	//carry add
	for(i=num1_len-1;i>-1;i--){
		num1_sum=((num1[i]-'0')+(num2[i+len_diferene]-'0')+carry);
		carry=num1_sum/10;
		push_back(num1_sum%10 + '0');
	}

	//add carry to num2
	for(i=num2_len-num1_len;i>-1;i--){
		num2_sum=((num2[i]-'0')+carry);
		pushback(num2_sum%10+'0');
		carry=num2_sum/10;
	}

	//add remain carry if it excist

	if(carry){
		pushback(carry+'0');
	}

	/*
	 * // Add remaining carry
    if (carry)
        str.push_back(carry+'0');

    // reverse resultant string
    reverse(str.begin(), str.end());

    return str;
	 */

}

